import React, { useState, useEffect } from 'react';
import styles from './Task3.module.css';

// –ü—Ä–æ—Å—Ç–∏–π –º–∞—Å–∏–≤ —Å–ª—ñ–≤ –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è
const words = [
  { id: 1, word: 'apple', emoji: 'üçé', translation: '—è–±–ª—É–∫–æ' },
  { id: 2, word: 'cat', emoji: 'üê±', translation: '–∫—ñ—Ç' },
  { id: 3, word: 'house', emoji: 'üè†', translation: '–±—É–¥–∏–Ω–æ–∫' },
  { id: 4, word: 'car', emoji: 'üöó', translation: '–∞–≤—Ç–æ–º–æ–±—ñ–ª—å' },
  { id: 5, word: 'book', emoji: 'üìö', translation: '–∫–Ω–∏–≥–∞' },
];

const Task3 = ({ onBack }) => {
  // –°—Ç–∞–Ω –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–ª–æ–≤–∞
  const [currentWord, setCurrentWord] = useState(null);
  // –°—Ç–∞–Ω –¥–ª—è –≤–≤–µ–¥–µ–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  const [answer, setAnswer] = useState('');
  // –°—Ç–∞–Ω –¥–ª—è —Ä–∞—Ö—É–Ω–∫—É
  const [score, setScore] = useState(0);
  // –°—Ç–∞–Ω –¥–ª—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–ø—Ä–æ–±
  const [attempts, setAttempts] = useState(0);
  // –°—Ç–∞–Ω –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const [message, setMessage] = useState('');
  // –ß–∏ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥
  const [showTranslation, setShowTranslation] = useState(false);

  // –û—Ç—Ä–∏–º—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ —Å–ª–æ–≤–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
  useEffect(() => {
    getNewWord();
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞
  const getNewWord = () => {
    const randomIndex = Math.floor(Math.random() * words.length);
    setCurrentWord(words[randomIndex]);
    setAnswer('');
    setMessage('');
    setShowTranslation(false);
  };

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  const checkAnswer = (e) => {
    e.preventDefault();
    
    if (!answer.trim()) {
      setMessage('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å');
      return;
    }

    setAttempts(attempts + 1);

    if (answer.toLowerCase() === currentWord.word.toLowerCase()) {
      setScore(score + 1);
      setMessage('–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü—å!');
      // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–µ —Å–ª–æ–≤–æ —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => {
        getNewWord();
      }, 1500);
    } else {
      setMessage('–ù–µ–≤—ñ—Ä–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      setShowTranslation(true);
    }
  };

  // –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
  const showAnswer = () => {
    setMessage(`–ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: ${currentWord.word}`);
    setShowTranslation(true);
    setAnswer(currentWord.word);
  };

  // –Ø–∫—â–æ —Å–ª–æ–≤–∞ —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ
  if (!currentWord) {
    return <div className={styles.loading}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;
  }

  return (
    <div className={styles.container}>
      <h1>–í–∏–≤—á–∞—î–º–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É</h1>

      <div className={styles.stats}>
        <p>–ü—Ä–∞–≤–∏–ª—å–Ω–æ: <span className={styles.score}>{score}</span></p>
        <p>–°–ø—Ä–æ–±: <span className={styles.attempts}>{attempts}</span></p>
      </div>

      <div className={styles.card}>
        <div className={styles.emoji}>{currentWord.emoji}</div>
        
        {showTranslation && (
          <div className={styles.translation}>
            <p>–ü–µ—Ä–µ–∫–ª–∞–¥: {currentWord.translation}</p>
            <p>–ê–Ω–≥–ª—ñ–π—Å—å–∫–æ—é: {currentWord.word}</p>
          </div>
        )}

        <form onSubmit={checkAnswer} className={styles.form}>
          <div className={styles.inputGroup}>
            <label htmlFor="wordInput" className={styles.visuallyHidden}>
              –í–≤–µ–¥—ñ—Ç—å —Å–ª–æ–≤–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é
            </label>
            <input
              id="wordInput"
              type="text"
              value={answer}
              onChange={(e) => setAnswer(e.target.value)}
              className={styles.input}
              placeholder="–í–≤–µ–¥—ñ—Ç—å —Å–ª–æ–≤–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é"
              autoComplete="off"
              required
              maxLength="30"
              aria-required="true"
            />
          </div>
          
          <div className={styles.buttonGroup}>
            <button 
              type="submit" 
              className={`${styles.button} ${styles.checkButton}`}
            >
              –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏
            </button>
            
            <button 
              type="button" 
              onClick={showAnswer}
              className={`${styles.button} ${styles.hintButton}`}
            >
              –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            </button>
          </div>
        </form>

        {message && (
          <div 
            className={`${styles.message} ${message.includes('–ü—Ä–∞–≤–∏–ª—å–Ω–æ') ? styles.correctMessage : styles.incorrectMessage} ${styles.visible}`}
          >
            {message}
          </div>
        )}
      </div>

      <button onClick={onBack} className={styles.backButton}>
        ‚Üê –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –∑–∞–≤–¥–∞–Ω—å
      </button>
    </div>
  );
};

export default Task3;
